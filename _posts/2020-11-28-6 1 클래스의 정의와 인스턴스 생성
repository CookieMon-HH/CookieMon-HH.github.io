---
title : "1.클래스의 정의와 인스턴스 생성"
categories:
  - 파이썬(구조)
# tags:
#  - Python
#  - Python구조

date : 2020-11-28
---

파이썬을 더욱 효과적으로 사용하기 위해 파이썬 구조에 대해 학습해보고자 한다.  
이번 포스팅에서는 클래스를 정의하는 방법과 인스턴스 객체를 생성하는 방법에 대해 알아보자.  

클래스란/인스턴스의 정의 
--- 

클래스란?  
- 개발자에게 필요한 새로운 형식을 정의하는것을 의미한다. 
- 속성과 데이터를 변형하는 함수를 같은 이름공간에 묶어 사용한다.  
ex) 직원 클래스가 있다고 하면 사번데이터, 이름데이터, 부서코드, 입사액션, 퇴사액션을 포함하여 정의할 수 있다.     

인스턴스란?    
- 클래스를 복사해서 생성한 복사본  
- 쿠키들을 클래스라고 하면 쿠키틀을 통해 찍어낸 쿠키들은 인스턴스라고 할 수 있다.  
ex) 직원클래스를 복사하여 사번데이터, 이름데이터, 부서코드정보가 있는 직원 인스턴스를 만들 수 있다.  


클래스에 대해 알기 위해 객체지향 프로그래밍의 3가지 특징을 알아보면 다음과 같다.   
- 추상성 : 꼭 필요한 부분만 구현하는 것  
- 상속성 : 부모클래스에서 공통부분을 상속받는것  
- 다형성 : 동일한 인터페이스에 대해 구체적인 인스턴스마다 다른 동작을 할 수도 있는 것  

또한 객체지향 프로그래밍을 사용한다는 것은 레고블록터렁 조립을 통한 개발이 가능하다는 것이다.  

클래스의 정의 방법 
---

클래스의 멤버는 멤버변수와 멤버 메서드로 구성되며 형식은 아래와 같다.  

```
class 클래스명(상위클래스):
      """
      클래스에 대한 설명 
      """
      def 함수명 (self,인자1,인자2...): 
              statement1
              statement2
              return

```
ex)  
```python
>>> class Person:        #클래스의 정의 (바로 메모리에 할당)  
	name="Default Name"
	def print(self):
		print("My name is {0}".format(self.name))

>>> p1=Person()         #인스턴스 객체 생성   
>>> p1.print()
My name is Default Name

```
위의 예시와 같은 경우에는 p1이라는 인스턴스와 Person이라는 클래스는 별도의 네임스페이스를 갖고 p1인스턴스가 Person 클래스를 참조한다고 볼 수 있다.  임
인스턴스 객체에 자기 데이터를 로컬에 저장하는 방법은 다음과 같다.  

```python

>>> p1.name="Cookiemon"    #name을 인스턴스 객체에 저장
>>> p1.print()
My name is Cookiemon       #인스턴스 객체에 저장된 name을 출력

```
